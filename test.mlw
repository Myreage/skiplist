module Skiplist

  use import int.Int
  use import array.Array
  use import list.List

  type skiplist = Empty | Succ int (skiplist) (list skiplist)

  (*type skiplist 'a = {
    value: 'a;
    ne : list 'a;       (* next element *)    (* Element suivant dans la mÃªme couche *)
    nl : list 'a;      (* next layer *)    (* Couche inferieure *)
  }*)

  (*let root (v: 'a) : skiplist 'a = Succ (v; Empty; Empty)*)

  let rec mem_skiplist (v: int) (sl: skiplist) : bool =
    match sl with
    | Empty -> False
    | Succ v_sl he hl -> if v = v_sl then True
                                     else match he with
                                          | Empty -> False
                                          | Succ v2_sl _ _ -> if v2_sl <= v then mem_skiplist v he
                                                                                else match hl with
                                                                                     | Nil -> False
                                                                                     | Cons nl _ -> mem_skiplist v nl
                                                                                     end
                                          end
    end

end